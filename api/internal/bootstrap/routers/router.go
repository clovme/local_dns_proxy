// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.

package routers

import (
	"local_dns_proxy/internal/bootstrap"
	"local_dns_proxy/internal/core"
	"gorm.io/gorm"
)

type routeGroup struct {
	dnsApi *core.RouterGroup
	dnsView *core.RouterGroup
}

func (r *routeGroup) register(db *gorm.DB) {
	// 初始化仓库和服务
	ctx := bootstrap.NewAppContext(db)

	r.dnsApi.GET("/copyright", ctx.WebDnsHandler.CopyrightHandler, "dnsApi", "copyright", "版权")
	r.dnsApi.GET("/list", ctx.WebDnsHandler.PageHandler, "dnsApi", "dnsList", "获取DNS列表")
	r.dnsApi.POST("/save", ctx.WebDnsHandler.SaveHandler, "dnsApi", "dnsSave", "保存DNS数据")
	r.dnsApi.DELETE("/delete", ctx.WebDnsHandler.DeleteHandler, "dnsApi", "dnsDelete", "删除DNS数据")
	r.dnsApi.POST("/service/running/:first/:iface", ctx.WebDnsHandler.ServiceRunningHandler, "dnsApi", "dnsServiceRunning", "启动DNS服务")
	r.dnsApi.POST("/service/stop/:first/:iface", ctx.WebDnsHandler.ServiceStopHandler, "dnsApi", "dnsServiceStop", "禁用DNS服务")
	r.dnsApi.GET("/network/interfaces", ctx.WebDnsHandler.GetNetIfaceHandler, "dnsApi", "dnsNetIface", "获取网络接口列表")

	r.dnsView.GET("/", ctx.WebDnsHandler.GetViewsIndexHandler, "dnsView", "indexView", "首页视图")
}